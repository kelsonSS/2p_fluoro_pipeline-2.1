
%%

Classnames = {'Noise-on','Tone-On','Tone-Ramping'};
Colors(:,:,2) = ...
         [0   0         0   
         0    0.122     0.196;...
         0    0.294     0.482;...
     0.404    0.718     0.922;];
Colors(:,:,1) = ...
   [ 0        0         0;...
     0.412    0.086     0;...
     0.651    0.137     0;...
     1.000    0.545     0.422;];
 Colors(:,:,3) = ...
   [ 0         0         0;...
     0.482    0.337     0;...
     0.710    0.506     0.035;...
     1.000    0.800     0.333;];


nreps = 30;
for class = 1:3 % classes 
    subplot(1,3,class) 
    hold on 
     for lvl = 1:4  % level
         
        shadedErrorBar([], mean( Passive.BayesClasses.Level(lvl,:,class,:) , 4),...
             std( Passive.BayesClasses.Level(lvl,:,class,:) , [] , 4 ) / sqrt(nreps) * 1.96,...
             {'Color', Colors(lvl,:,class)} )    
     end
     
     title(Classnames{class})
     
    % if class == 3
     h = gca; 
      legend(h.Children(1:4:16),{'Inf','+20 dB','+10 dB','  0 dB'},'Location','southeast')
     %end 
end 